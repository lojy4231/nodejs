
🏁 **Goal:  "Node.js와 express로 로그인 기능이 없는 나만의 항해 블로그 백엔드 서버 만들기"**

- 학습 과제를 끝내고 나면 할 수 있어요!
    1. Node.js를 이용해서 웹 프레임워크를 구성 할 수 있어요. 
    2. mongoDB와 mongoose를 이용하여 원하는 데이터베이스를 만들고 활용할 수 있어요.
    3. express를 기반으로 CRUD(Create, Read, Update, Delete) 기능이 포함된 REST API를 만들 수 있어요.
    4. AWS에 express와 mongoDB 서비스를 배포할 수 있어요.


*필수*

전체 게시글 목록 조회
    제목, 작성자명, 작성 날짜를 조회
    작성 날짜 기준으로 내림차순 정렬

게시글 작성
    제목, 작성자명, 비밀번호, 작성 내용 입력

게시글 상세보기
    제목, 작성자명, 작성 날짜, 작성 내용을 조회하기
    (검색 기능이 아님)

게시글 수정
    API를 호출할 때 입력된 비밀번호를 비교하여 동일할 때만 글이 수정되게 하기

게시글 삭제
    API를 호출할 때 입력된 비밀번호를 비교하여 동일할 때만 글이 삭제되게 하기


EC2 배포
   Ubuntu EC2 를 구매한 뒤, 노드 포트(3000)를 80번 포트로 포워딩해서 포트 번호 없이도 서비스에 접속 가능 하도록 하기
   mongoDB를 EC2 내부에 설치해서 연결하기





❓ **Why: 과제 제출시에는 아래 질문을 고민해보고 답변을 함께 제출해주세요.**


1. 수정, 삭제 API의 request를 어떤 방식으로 사용하셨나요? (param, query, body)
2. 어떤 상황에 어떤 방식의 request를 써야하나요?
3. RESTful한 API를 설계했나요? 어떤 부분이 그런가요? 어떤 부분이 그렇지 않나요?